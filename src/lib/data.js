// Table of height fo male children (0-228 months, 0-19 years)
// key: month number
// value: {L, M, S}
const data = {
    0: [1, 49.8842, 0.03795], 
    1: [1, 54.7244, 0.03557], 
    2: [1, 58.4249, 0.03424], 
    3: [1, 61.4292, 0.03328], 
    4: [1, 63.886, 0.03257], 
    5: [1, 65.9026, 0.03204], 
    6: [1, 67.6236, 0.03165], 
    7: [1, 69.1645, 0.03139], 
    8: [1, 70.5994, 0.03124], 
    9: [1, 71.9687, 0.03117], 
    10: [1, 73.2812, 0.03118], 
    11: [1, 74.5388, 0.03125], 
    12: [1, 75.7488, 0.03137], 
    13: [1, 76.9186, 0.03154], 
    14: [1, 78.0497, 0.03174], 
    15: [1, 79.1458, 0.03197], 
    16: [1, 80.2113, 0.03222], 
    17: [1, 81.2487, 0.0325], 
    18: [1, 82.2587, 0.03279], 
    19: [1, 83.2418, 0.0331], 
    20: [1, 84.1996, 0.03342], 
    21: [1, 85.1348, 0.03376], 
    22: [1, 86.0477, 0.0341], 
    23: [1, 86.941, 0.03445], 
    24: [1, 87.1161, 0.03507], 
    25: [1, 87.972, 0.03542], 
    26: [1, 88.8065, 0.03576], 
    27: [1, 89.6197, 0.0361], 
    28: [1, 90.412, 0.03642], 
    29: [1, 91.1828, 0.03674], 
    30: [1, 91.9327, 0.03704], 
    31: [1, 92.6631, 0.03733], 
    32: [1, 93.3753, 0.03761], 
    33: [1, 94.0711, 0.03787], 
    34: [1, 94.7532, 0.03812], 
    35: [1, 95.4236, 0.03836], 
    36: [1, 96.0835, 0.03858], 
    37: [1, 96.7337, 0.03879], 
    38: [1, 97.3749, 0.039], 
    39: [1, 98.0073, 0.03919], 
    40: [1, 98.631, 0.03937], 
    41: [1, 99.2459, 0.03954], 
    42: [1, 99.8515, 0.03971], 
    43: [1, 100.4485, 0.03986], 
    44: [1, 101.0374, 0.04002], 
    45: [1, 101.6186, 0.04016], 
    46: [1, 102.1933, 0.04031], 
    47: [1, 102.7625, 0.04045], 
    48: [1, 103.3273, 0.04059], 
    49: [1, 103.8886, 0.04073], 
    50: [1, 104.4473, 0.04086], 
    51: [1, 105.0041, 0.041], 
    52: [1, 105.5596, 0.04113], 
    53: [1, 106.1138, 0.04126], 
    54: [1, 106.6668, 0.04139], 
    55: [1, 107.2188, 0.04152], 
    56: [1, 107.7697, 0.04165], 
    57: [1, 108.3198, 0.04177], 
    58: [1, 108.8689, 0.0419], 
    59: [1, 109.417, 0.04202], 
    60: [1, 109.9638, 0.04214], 
    61: [1, 110.2647, 0.04164], 
    62: [1, 110.8006, 0.04172], 
    63: [1, 111.3338, 0.0418], 
    64: [1, 111.8636, 0.04187], 
    65: [1, 112.3895, 0.04195], 
    66: [1, 112.911, 0.04203], 
    67: [1, 113.428, 0.04211], 
    68: [1, 113.941, 0.04218], 
    69: [1, 114.45, 0.04226], 
    70: [1, 114.9547, 0.04234], 
    71: [1, 115.4549, 0.04241], 
    72: [1, 115.9509, 0.04249], 
    73: [1, 116.4432, 0.04257], 
    74: [1, 116.9325, 0.04264], 
    75: [1, 117.4196, 0.04272], 
    76: [1, 117.9046, 0.0428], 
    77: [1, 118.388, 0.04287], 
    78: [1, 118.87, 0.04295], 
    79: [1, 119.3508, 0.04303], 
    80: [1, 119.8303, 0.04311], 
    81: [1, 120.3085, 0.04318], 
    82: [1, 120.7853, 0.04326], 
    83: [1, 121.2604, 0.04334], 
    84: [1, 121.7338, 0.04342], 
    85: [1, 122.2053, 0.0435], 
    86: [1, 122.675, 0.04358], 
    87: [1, 123.1429, 0.04366], 
    88: [1, 123.6092, 0.04374], 
    89: [1, 124.0736, 0.04382], 
    90: [1, 124.5361, 0.0439], 
    91: [1, 124.9964, 0.04398], 
    92: [1, 125.4545, 0.04406], 
    93: [1, 125.9104, 0.04414], 
    94: [1, 126.364, 0.04422], 
    95: [1, 126.8156, 0.0443], 
    96: [1, 127.2651, 0.04438], 
    97: [1, 127.7129, 0.04446], 
    98: [1, 128.159, 0.04454], 
    99: [1, 128.6034, 0.04462], 
    100: [1, 129.0466, 0.0447], 
    101: [1, 129.4887, 0.04478], 
    102: [1, 129.93, 0.04487], 
    103: [1, 130.3705, 0.04495], 
    104: [1, 130.8103, 0.04503], 
    105: [1, 131.2495, 0.04511], 
    106: [1, 131.6884, 0.04519], 
    107: [1, 132.1269, 0.04527], 
    108: [1, 132.5652, 0.04535], 
    109: [1, 133.0031, 0.04543], 
    110: [1, 133.4404, 0.04551], 
    111: [1, 133.877, 0.04559], 
    112: [1, 134.313, 0.04566], 
    113: [1, 134.7483, 0.04574], 
    114: [1, 135.1829, 0.04582], 
    115: [1, 135.6168, 0.04589], 
    116: [1, 136.0501, 0.04597], 
    117: [1, 136.4829, 0.04604], 
    118: [1, 136.9153, 0.04612], 
    119: [1, 137.3474, 0.04619], 
    120: [1, 137.7795, 0.04626], 
    121: [1, 138.2119, 0.04633], 
    122: [1, 138.6452, 0.0464], 
    123: [1, 139.0797, 0.04647], 
    124: [1, 139.5158, 0.04654], 
    125: [1, 139.954, 0.04661], 
    126: [1, 140.3948, 0.04667], 
    127: [1, 140.8387, 0.04674], 
    128: [1, 141.2859, 0.0468], 
    129: [1, 141.7368, 0.04686], 
    130: [1, 142.1916, 0.04692], 
    131: [1, 142.6501, 0.04698], 
    132: [1, 143.1126, 0.04703], 
    133: [1, 143.5795, 0.04709], 
    134: [1, 144.0511, 0.04714], 
    135: [1, 144.5276, 0.04719], 
    136: [1, 145.0093, 0.04723], 
    137: [1, 145.4964, 0.04728], 
    138: [1, 145.9891, 0.04732], 
    139: [1, 146.4878, 0.04736], 
    140: [1, 146.9927, 0.0474], 
    141: [1, 147.5041, 0.04744], 
    142: [1, 148.0224, 0.04747], 
    143: [1, 148.5478, 0.0475], 
    144: [1, 149.0807, 0.04753], 
    145: [1, 149.6212, 0.04755], 
    146: [1, 150.1694, 0.04758], 
    147: [1, 150.7256, 0.04759], 
    148: [1, 151.2899, 0.04761], 
    149: [1, 151.8623, 0.04762], 
    150: [1, 152.4425, 0.04763], 
    151: [1, 153.0298, 0.04763], 
    152: [1, 153.6234, 0.04764], 
    153: [1, 154.2223, 0.04763], 
    154: [1, 154.8258, 0.04763], 
    155: [1, 155.4329, 0.04762], 
    156: [1, 156.0426, 0.0476], 
    157: [1, 156.6539, 0.04758], 
    158: [1, 157.266, 0.04756], 
    159: [1, 157.8775, 0.04754], 
    160: [1, 158.4871, 0.04751], 
    161: [1, 159.0937, 0.04747], 
    162: [1, 159.6962, 0.04744], 
    163: [1, 160.2939, 0.0474], 
    164: [1, 160.8861, 0.04735], 
    165: [1, 161.472, 0.0473], 
    166: [1, 162.0505, 0.04725], 
    167: [1, 162.6207, 0.0472], 
    168: [1, 163.1816, 0.04714], 
    169: [1, 163.7321, 0.04707], 
    170: [1, 164.2717, 0.04701], 
    171: [1, 164.7994, 0.04694], 
    172: [1, 165.3145, 0.04687], 
    173: [1, 165.8165, 0.04679], 
    174: [1, 166.305, 0.04671], 
    175: [1, 166.7799, 0.04663], 
    176: [1, 167.2415, 0.04655], 
    177: [1, 167.6899, 0.04646], 
    178: [1, 168.1255, 0.04637], 
    179: [1, 168.5482, 0.04628], 
    180: [1, 168.958, 0.04619], 
    181: [1, 169.3549, 0.04609], 
    182: [1, 169.7389, 0.04599], 
    183: [1, 170.1099, 0.04589], 
    184: [1, 170.468, 0.04579], 
    185: [1, 170.8136, 0.04569], 
    186: [1, 171.1468, 0.04559], 
    187: [1, 171.468, 0.04548], 
    188: [1, 171.7773, 0.04538], 
    189: [1, 172.0748, 0.04527], 
    190: [1, 172.3606, 0.04516], 
    191: [1, 172.6345, 0.04506], 
    192: [1, 172.8967, 0.04495], 
    193: [1, 173.147, 0.04484], 
    194: [1, 173.3856, 0.04473], 
    195: [1, 173.6126, 0.04462], 
    196: [1, 173.828, 0.04451], 
    197: [1, 174.0321, 0.0444], 
    198: [1, 174.2251, 0.04429], 
    199: [1, 174.4071, 0.04418], 
    200: [1, 174.5784, 0.04407], 
    201: [1, 174.7392, 0.04396], 
    202: [1, 174.8896, 0.04385], 
    203: [1, 175.0301, 0.04375], 
    204: [1, 175.1609, 0.04364], 
    205: [1, 175.2824, 0.04353], 
    206: [1, 175.3951, 0.04343], 
    207: [1, 175.4995, 0.04332], 
    208: [1, 175.5959, 0.04322], 
    209: [1, 175.685, 0.04311], 
    210: [1, 175.7672, 0.04301], 
    211: [1, 175.8432, 0.04291], 
    212: [1, 175.9133, 0.04281], 
    213: [1, 175.9781, 0.04271], 
    214: [1, 176.038, 0.04261], 
    215: [1, 176.0935, 0.04251], 
    216: [1, 176.1449, 0.04241], 
    217: [1, 176.1925, 0.04232], 
    218: [1, 176.2368, 0.04222], 
    219: [1, 176.2779, 0.04213], 
    220: [1, 176.3162, 0.04204], 
    221: [1, 176.3518, 0.04195], 
    222: [1, 176.3851, 0.04185], 
    223: [1, 176.4162, 0.04177], 
    224: [1, 176.4453, 0.04168], 
    225: [1, 176.4724, 0.04159], 
    226: [1, 176.4976, 0.0415], 
    227: [1, 176.5211, 0.04142], 
    228: [1, 176.5432, 0.04134]
}

// Index used for the calculation of the expected value X for a percentile P (the key)
// with the formula:
//   X = M[(1 + LSZ)^(1/L)]
// Calculator here: https://measuringu.com/zcalcp/
const zIndex = {
    1: -2.3263,
    2: -2.0537,
    3: -1.8808,
    5: -1.6449,
    10: -1.2816,
    15: -1.0364,
    20: -0.8416,
    25: -0.6745,
    30: -0.5244,
    35: -0.3853,
    40: -0.2533,
    45: -0.1257,
    50: 0,
    55: 0.1257,
    60: 0.2533,
    65: 0.3853,
    70: 0.5244,
    75: 0.6745,
    80: 0.8416,
    85: 1.0364, 
    90: 1.2816,
    95: 1.6449,
    97: 1.8808,
    98: 2.0537,
    99: 2.3263
}

export function getData(percentiles) {
    let _data = {};
    Object.keys(data).forEach(d => {
        let v = data[d];
        let L = v[0];
        let M = v[1];
        let S = v[2];
        
        if (!_data[d]) _data[d]={};
        
        percentiles.forEach(p => {
            let z = zIndex[p];
            if (z===undefined) return;
            let X = M * (Math.pow(1+L*S*z, 1/L));
            _data[d][p] = X;
        })

    })
    return _data;
} 